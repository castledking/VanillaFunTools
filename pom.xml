<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vanillafun</groupId>
    <artifactId>VanillaFunTools</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>VanillaFunTools</name>

    <properties>
        <java.version>16</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <foundation.version>6.0.10</foundation.version>

        <!-- Leave on "com.github.kangarko" if you use Foundation from GitHub like most people,
             or change to "org.mineacademy" if you downloaded our library to your disk and compiled it. -->
        <foundation.path>com.github.kangarko</foundation.path>

        <!-- DO NOT EDIT. -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <repositories>
        <!-- DO NOT EDIT, used to pull Foundation from the JitPack site. -->
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <id>spigot-repo</id>
            <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <!-- Do NOT edit. -->
    <pluginRepositories>
        <pluginRepository>
            <id>maven-snapshots</id>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>

        <!-- (Optional) Access the server jar for NMS (groupId, artifactId and version do not matter,
             but keep version in artifactId and not in version if using multiple NMS imports,
             otherwise Maven will fail to import them correctly).
             NB: The <systemPath> is set to the "library" folder in your source folder (in the same parent
                 directory where you have "target" and will look for file patched_1.8.8.jar there as an example. -->
        <!--<dependency>
            <groupId>paper-server</groupId>
            <artifactId>Paper-1.8.8</artifactId>
            <version>1</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/library/patched_1.8.8.jar</systemPath>
        </dependency>-->

        <!-- We do not need to import Spigot API since it is made available through Foundation below.
            If you want to code for another MC version, import it above Foundation as per https://www.spigotmc.org/wiki/spigot-maven/ -->

        <!-- Use our Foundation library. It contains the latest Spigot API, you only need to import that if you build
             for a different version. In that case, place your API above Foundation so Maven will prioritize it. -->
        <dependency>
            <groupId>${foundation.path}</groupId>
            <artifactId>Foundation</artifactId>
            <version>${foundation.version}</version>
        </dependency>
        <dependency>
            <groupId>org.spigotmc</groupId>
            <artifactId>spigot-api</artifactId>
            <version>1.19-R0.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <!-- DO NOT EDIT unless instructed to do so or you know what you're doing. -->
    <build>
        <finalName>${project.name}-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>

                <!-- Change version to the latest one from
                     https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
                <version>3.2.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>

                <!-- Change version to the latest one from
                     https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
                <version>3.10.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>

                <!-- We use latest snapshot here for modern Java compatibility. Change version to the latest one from
                     https://repository.apache.org/content/repositories/snapshots/org/apache/maven/plugins/maven-shade-plugin/ -->
                <version>3.3.1-SNAPSHOT</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                    <artifactSet>
                        <includes>
                            <include>${foundation.path}:Foundation*</include>
                        </includes>
                    </artifactSet>
                    <relocations>
                        <!-- Move the Foundation library into your own package in "lib" subpackage to prevent interference. -->
                        <relocation>
                            <pattern>org.mineacademy.fo</pattern>
                            <shadedPattern>${project.groupId}.${project.artifactId}.lib</shadedPattern>
                        </relocation>
                    </relocations>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>